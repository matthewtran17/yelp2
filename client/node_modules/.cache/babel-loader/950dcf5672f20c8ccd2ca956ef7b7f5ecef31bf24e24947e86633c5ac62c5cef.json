{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst fs = require('fs');\nconst commonDir = require('commondir');\nconst pkgDir = require('pkg-dir');\nconst makeDir = require('make-dir');\nconst {\n  env,\n  cwd\n} = process;\nconst isWritable = path => {\n  try {\n    fs.accessSync(path, fs.constants.W_OK);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\nfunction useDirectory(directory, options) {\n  if (options.create) {\n    makeDir.sync(directory);\n  }\n  if (options.thunk) {\n    return (...arguments_) => path.join(directory, ...arguments_);\n  }\n  return directory;\n}\nfunction getNodeModuleDirectory(directory) {\n  const nodeModules = path.join(directory, 'node_modules');\n  if (!isWritable(nodeModules) && (fs.existsSync(nodeModules) || !isWritable(path.join(directory)))) {\n    return;\n  }\n  return nodeModules;\n}\nmodule.exports = (options = {}) => {\n  if (env.CACHE_DIR && !['true', 'false', '1', '0'].includes(env.CACHE_DIR)) {\n    return useDirectory(path.join(env.CACHE_DIR, options.name), options);\n  }\n  let {\n    cwd: directory = cwd()\n  } = options;\n  if (options.files) {\n    directory = commonDir(directory, options.files);\n  }\n  directory = pkgDir.sync(directory);\n  if (!directory) {\n    return;\n  }\n  const nodeModules = getNodeModuleDirectory(directory);\n  if (!nodeModules) {\n    return undefined;\n  }\n  return useDirectory(path.join(directory, 'node_modules', '.cache', options.name), options);\n};","map":{"version":3,"names":["path","require","fs","commonDir","pkgDir","makeDir","env","cwd","process","isWritable","accessSync","constants","W_OK","_","useDirectory","directory","options","create","sync","thunk","arguments_","join","getNodeModuleDirectory","nodeModules","existsSync","module","exports","CACHE_DIR","includes","name","files","undefined"],"sources":["C:/Users/ryana/Desktop/CPSC 362 PROJECT/client/node_modules/find-cache-dir/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst fs = require('fs');\nconst commonDir = require('commondir');\nconst pkgDir = require('pkg-dir');\nconst makeDir = require('make-dir');\n\nconst {env, cwd} = process;\n\nconst isWritable = path => {\n\ttry {\n\t\tfs.accessSync(path, fs.constants.W_OK);\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n\nfunction useDirectory(directory, options) {\n\tif (options.create) {\n\t\tmakeDir.sync(directory);\n\t}\n\n\tif (options.thunk) {\n\t\treturn (...arguments_) => path.join(directory, ...arguments_);\n\t}\n\n\treturn directory;\n}\n\nfunction getNodeModuleDirectory(directory) {\n\tconst nodeModules = path.join(directory, 'node_modules');\n\n\tif (\n\t\t!isWritable(nodeModules) &&\n\t\t(fs.existsSync(nodeModules) || !isWritable(path.join(directory)))\n\t) {\n\t\treturn;\n\t}\n\n\treturn nodeModules;\n}\n\nmodule.exports = (options = {}) => {\n\tif (env.CACHE_DIR && !['true', 'false', '1', '0'].includes(env.CACHE_DIR)) {\n\t\treturn useDirectory(path.join(env.CACHE_DIR, options.name), options);\n\t}\n\n\tlet {cwd: directory = cwd()} = options;\n\n\tif (options.files) {\n\t\tdirectory = commonDir(directory, options.files);\n\t}\n\n\tdirectory = pkgDir.sync(directory);\n\n\tif (!directory) {\n\t\treturn;\n\t}\n\n\tconst nodeModules = getNodeModuleDirectory(directory);\n\tif (!nodeModules) {\n\t\treturn undefined;\n\t}\n\n\treturn useDirectory(path.join(directory, 'node_modules', '.cache', options.name), options);\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AACxB,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMG,MAAM,GAAGH,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMI,OAAO,GAAGJ,OAAO,CAAC,UAAU,CAAC;AAEnC,MAAM;EAACK,GAAG;EAAEC;AAAG,CAAC,GAAGC,OAAO;AAE1B,MAAMC,UAAU,GAAGT,IAAI,IAAI;EAC1B,IAAI;IACHE,EAAE,CAACQ,UAAU,CAACV,IAAI,EAAEE,EAAE,CAACS,SAAS,CAACC,IAAI,CAAC;IACtC,OAAO,IAAI;EACZ,CAAC,CAAC,OAAOC,CAAC,EAAE;IACX,OAAO,KAAK;EACb;AACD,CAAC;AAED,SAASC,YAAYA,CAACC,SAAS,EAAEC,OAAO,EAAE;EACzC,IAAIA,OAAO,CAACC,MAAM,EAAE;IACnBZ,OAAO,CAACa,IAAI,CAACH,SAAS,CAAC;EACxB;EAEA,IAAIC,OAAO,CAACG,KAAK,EAAE;IAClB,OAAO,CAAC,GAAGC,UAAU,KAAKpB,IAAI,CAACqB,IAAI,CAACN,SAAS,EAAE,GAAGK,UAAU,CAAC;EAC9D;EAEA,OAAOL,SAAS;AACjB;AAEA,SAASO,sBAAsBA,CAACP,SAAS,EAAE;EAC1C,MAAMQ,WAAW,GAAGvB,IAAI,CAACqB,IAAI,CAACN,SAAS,EAAE,cAAc,CAAC;EAExD,IACC,CAACN,UAAU,CAACc,WAAW,CAAC,KACvBrB,EAAE,CAACsB,UAAU,CAACD,WAAW,CAAC,IAAI,CAACd,UAAU,CAACT,IAAI,CAACqB,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC,EAChE;IACD;EACD;EAEA,OAAOQ,WAAW;AACnB;AAEAE,MAAM,CAACC,OAAO,GAAG,CAACV,OAAO,GAAG,CAAC,CAAC,KAAK;EAClC,IAAIV,GAAG,CAACqB,SAAS,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACtB,GAAG,CAACqB,SAAS,CAAC,EAAE;IAC1E,OAAOb,YAAY,CAACd,IAAI,CAACqB,IAAI,CAACf,GAAG,CAACqB,SAAS,EAAEX,OAAO,CAACa,IAAI,CAAC,EAAEb,OAAO,CAAC;EACrE;EAEA,IAAI;IAACT,GAAG,EAAEQ,SAAS,GAAGR,GAAG,CAAC;EAAC,CAAC,GAAGS,OAAO;EAEtC,IAAIA,OAAO,CAACc,KAAK,EAAE;IAClBf,SAAS,GAAGZ,SAAS,CAACY,SAAS,EAAEC,OAAO,CAACc,KAAK,CAAC;EAChD;EAEAf,SAAS,GAAGX,MAAM,CAACc,IAAI,CAACH,SAAS,CAAC;EAElC,IAAI,CAACA,SAAS,EAAE;IACf;EACD;EAEA,MAAMQ,WAAW,GAAGD,sBAAsB,CAACP,SAAS,CAAC;EACrD,IAAI,CAACQ,WAAW,EAAE;IACjB,OAAOQ,SAAS;EACjB;EAEA,OAAOjB,YAAY,CAACd,IAAI,CAACqB,IAAI,CAACN,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAEC,OAAO,CAACa,IAAI,CAAC,EAAEb,OAAO,CAAC;AAC3F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}