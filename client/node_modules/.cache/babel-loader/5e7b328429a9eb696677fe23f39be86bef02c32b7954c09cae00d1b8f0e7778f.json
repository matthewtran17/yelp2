{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.types = void 0;\nvar clone_object_1 = __importDefault(require(\"../lib/clone-object\"));\nvar helpers_1 = require(\"../lib/helpers\");\nvar matches_mimetype_1 = __importDefault(require(\"../lib/matches-mimetype\"));\nvar openapi_to_json_schema_1 = __importStar(require(\"../lib/openapi-to-json-schema\"));\n/**\n * The order of this object determines how they will be sorted in the compiled JSON Schema\n * representation.\n *\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#parameterObject}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#parameterObject}\n */\nexports.types = {\n  path: 'Path Params',\n  query: 'Query Params',\n  body: 'Body Params',\n  cookie: 'Cookie Params',\n  formData: 'Form Data',\n  header: 'Headers',\n  metadata: 'Metadata' // This a special type reserved for https://npm.im/api\n};\nfunction getParametersAsJSONSchema(operation, api, opts) {\n  var _a;\n  var hasCircularRefs = false;\n  var hasDiscriminatorMappingRefs = false;\n  function refLogger(ref, type) {\n    if (type === 'ref') {\n      hasCircularRefs = true;\n    } else {\n      hasDiscriminatorMappingRefs = true;\n    }\n  }\n  function getDeprecated(schema, type) {\n    // If we wish to retain deprecated properties then we shouldn't split them out into the\n    // `deprecatedProps` object.\n    if (opts.retainDeprecatedProperties) {\n      return null;\n    }\n    // If there's no properties, bail\n    if (!schema || !schema.properties) return null;\n    // Clone the original schema so this doesn't interfere with it\n    var deprecatedBody = (0, clone_object_1.default)(schema);\n    // Booleans are not valid for required in draft 4, 7 or 2020. Not sure why the typing thinks\n    // they are.\n    var requiredParams = schema.required || [];\n    // Find all top-level deprecated properties from the schema - required and readOnly params are\n    // excluded.\n    var allDeprecatedProps = {};\n    Object.keys(deprecatedBody.properties).forEach(function (key) {\n      var deprecatedProp = deprecatedBody.properties[key];\n      if (deprecatedProp.deprecated && !requiredParams.includes(key) && !deprecatedProp.readOnly) {\n        allDeprecatedProps[key] = deprecatedProp;\n      }\n    });\n    // We know this is the right type. todo: don't use as\n    deprecatedBody.properties = allDeprecatedProps;\n    var deprecatedSchema = (0, openapi_to_json_schema_1.default)(deprecatedBody, {\n      globalDefaults: opts.globalDefaults,\n      hideReadOnlyProperties: opts.hideReadOnlyProperties,\n      hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n      prevExampleSchemas: [],\n      refLogger: refLogger,\n      transformer: opts.transformer\n    });\n    // Check if the schema wasn't created or there's no deprecated properties\n    if (Object.keys(deprecatedSchema).length === 0 || Object.keys(deprecatedSchema.properties).length === 0) {\n      return null;\n    }\n    // Remove deprecated properties from the original schema\n    // Not using the clone here becuase we WANT this to affect the original\n    Object.keys(schema.properties).forEach(function (key) {\n      // We know this will always be a SchemaObject\n      if (schema.properties[key].deprecated && !requiredParams.includes(key)) {\n        delete schema.properties[key];\n      }\n    });\n    return {\n      type: type,\n      schema: (0, helpers_1.isPrimitive)(deprecatedSchema) ? deprecatedSchema : __assign(__assign({}, deprecatedSchema), {\n        $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(deprecatedSchema, api)\n      })\n    };\n  }\n  /**\n   *\n   */\n  function transformRequestBody() {\n    var requestBody = operation.getRequestBody();\n    if (!requestBody || !Array.isArray(requestBody)) return null;\n    var mediaType = requestBody[0],\n      mediaTypeObject = requestBody[1],\n      description = requestBody[2];\n    var type = mediaType === 'application/x-www-form-urlencoded' ? 'formData' : 'body';\n    // If this schema is completely empty, don't bother processing it.\n    if (!mediaTypeObject.schema || !Object.keys(mediaTypeObject.schema).length) {\n      return null;\n    }\n    var prevExampleSchemas = [];\n    if ('example' in mediaTypeObject) {\n      prevExampleSchemas.push({\n        example: mediaTypeObject.example\n      });\n    } else if ('examples' in mediaTypeObject) {\n      prevExampleSchemas.push({\n        examples: Object.values(mediaTypeObject.examples).map(function (example) {\n          return example.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        })\n      });\n    }\n    // We're cloning the request schema because we've had issues with request schemas that were\n    // dereferenced being processed multiple times because their component is also processed.\n    var requestSchema = (0, clone_object_1.default)(mediaTypeObject.schema);\n    var cleanedSchema = (0, openapi_to_json_schema_1.default)(requestSchema, {\n      globalDefaults: opts.globalDefaults,\n      hideReadOnlyProperties: opts.hideReadOnlyProperties,\n      hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n      prevExampleSchemas: prevExampleSchemas,\n      refLogger: refLogger,\n      transformer: opts.transformer\n    });\n    // If this schema is **still** empty, don't bother returning it.\n    if (!Object.keys(cleanedSchema).length) {\n      return null;\n    }\n    return __assign({\n      type: type,\n      label: exports.types[type],\n      schema: (0, helpers_1.isPrimitive)(cleanedSchema) ? cleanedSchema : __assign(__assign({}, cleanedSchema), {\n        $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(cleanedSchema, api)\n      }),\n      deprecatedProps: getDeprecated(cleanedSchema, type)\n    }, description ? {\n      description: description\n    } : {});\n  }\n  function transformComponents() {\n    if (!('components' in api)) {\n      return false;\n    }\n    var components = __assign({}, Object.keys(api.components).map(function (componentType) {\n      var _a;\n      return _a = {}, _a[componentType] = {}, _a;\n    }).reduce(function (prev, next) {\n      return Object.assign(prev, next);\n    }, {}));\n    Object.keys(api.components).forEach(function (componentType) {\n      if (typeof api.components[componentType] === 'object' && !Array.isArray(api.components[componentType])) {\n        Object.keys(api.components[componentType]).forEach(function (schemaName) {\n          var componentSchema = (0, clone_object_1.default)(api.components[componentType][schemaName]);\n          components[componentType][schemaName] = (0, openapi_to_json_schema_1.default)(componentSchema, {\n            globalDefaults: opts.globalDefaults,\n            hideReadOnlyProperties: opts.hideReadOnlyProperties,\n            hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n            refLogger: refLogger,\n            transformer: opts.transformer\n          });\n        });\n      }\n    });\n    // If none of our above component type placeholders got used let's clean them up.\n    Object.keys(components).forEach(function (componentType) {\n      if (!Object.keys(components[componentType]).length) {\n        delete components[componentType];\n      }\n    });\n    return components;\n  }\n  function transformParameters() {\n    var operationParams = operation.getParameters();\n    var transformed = Object.keys(exports.types).map(function (type) {\n      var required = [];\n      // This `as` actually *could* be a ref, but we don't want refs to pass through here, so\n      // `.in` will never match `type`\n      var parameters = operationParams.filter(function (param) {\n        return param.in === type;\n      });\n      if (parameters.length === 0) {\n        return null;\n      }\n      var properties = parameters.reduce(function (prev, current) {\n        var schema = {};\n        if ('schema' in current) {\n          var currentSchema = current.schema ? (0, clone_object_1.default)(current.schema) : {};\n          if (current.example) {\n            // `example` can be present outside of the `schema` block so if it's there we should\n            // pull it in so it can be handled and returned if it's valid.\n            currentSchema.example = current.example;\n          } else if (current.examples) {\n            // `examples` isn't actually supported here in OAS 3.0, but we might as well support\n            // it because `examples` is JSON Schema and that's fully supported in OAS 3.1.\n            currentSchema.examples = current.examples;\n          }\n          if (current.deprecated) currentSchema.deprecated = current.deprecated;\n          var interimSchema = (0, openapi_to_json_schema_1.default)(currentSchema, {\n            currentLocation: \"/\".concat(current.name),\n            globalDefaults: opts.globalDefaults,\n            hideReadOnlyProperties: opts.hideReadOnlyProperties,\n            hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n            refLogger: refLogger,\n            transformer: opts.transformer\n          });\n          schema = (0, helpers_1.isPrimitive)(interimSchema) ? interimSchema : __assign(__assign({}, interimSchema), {\n            // Note: this applies a `$schema` version to each field in the larger schema\n            // object. It's not really **correct** but it's what we have to do because\n            // there's a chance that the end user has indicated the schemas are different.\n            $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(currentSchema, api)\n          });\n        } else if ('content' in current && typeof current.content === 'object') {\n          var contentKeys = Object.keys(current.content);\n          if (contentKeys.length) {\n            var contentType = void 0;\n            if (contentKeys.length === 1) {\n              contentType = contentKeys[0];\n            } else {\n              // We should always try to prioritize `application/json` over any other possible\n              // content that might be present on this schema.\n              var jsonLikeContentTypes = contentKeys.filter(function (k) {\n                return matches_mimetype_1.default.json(k);\n              });\n              if (jsonLikeContentTypes.length) {\n                contentType = jsonLikeContentTypes[0];\n              } else {\n                contentType = contentKeys[0];\n              }\n            }\n            if (typeof current.content[contentType] === 'object' && 'schema' in current.content[contentType]) {\n              var currentSchema = current.content[contentType].schema ? (0, clone_object_1.default)(current.content[contentType].schema) : {};\n              if (current.example) {\n                // `example` can be present outside of the `schema` block so if it's there we\n                // should pull it in so it can be handled and returned if it's valid.\n                currentSchema.example = current.example;\n              } else if (current.examples) {\n                // `examples` isn't actually supported here in OAS 3.0, but we might as well\n                // support it because `examples` is JSON Schema and that's fully supported in OAS\n                // 3.1.\n                currentSchema.examples = current.examples;\n              }\n              if (current.deprecated) currentSchema.deprecated = current.deprecated;\n              var interimSchema = (0, openapi_to_json_schema_1.default)(currentSchema, {\n                currentLocation: \"/\".concat(current.name),\n                globalDefaults: opts.globalDefaults,\n                hideReadOnlyProperties: opts.hideReadOnlyProperties,\n                hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n                refLogger: refLogger,\n                transformer: opts.transformer\n              });\n              schema = (0, helpers_1.isPrimitive)(interimSchema) ? interimSchema : __assign(__assign({}, interimSchema), {\n                // Note: this applies a `$schema` version to each field in the larger schema\n                // object. It's not really **correct** but it's what we have to do because\n                // there's a chance that the end user has indicated the schemas are different.\n                $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(currentSchema, api)\n              });\n            }\n          }\n        }\n        // Parameter descriptions don't exist in `current.schema` so `constructSchema` will never\n        // have access to it.\n        if (current.description) {\n          if (!(0, helpers_1.isPrimitive)(schema)) {\n            schema.description = current.description;\n          }\n        }\n        prev[current.name] = schema;\n        if (current.required) {\n          required.push(current.name);\n        }\n        return prev;\n      }, {});\n      // This typing is technically WRONG :( but it's the best we can do for now.\n      var schema = {\n        type: 'object',\n        properties: properties,\n        required: required\n      };\n      return {\n        type: type,\n        label: exports.types[type],\n        schema: schema,\n        deprecatedProps: getDeprecated(schema, type)\n      };\n    }).filter(Boolean);\n    if (!opts.mergeIntoBodyAndMetadata) {\n      return transformed;\n    } else if (!transformed.length) {\n      return [];\n    }\n    // If we want to merge parameters into a single metadata entry then we need to pull all\n    // available schemas and `deprecatedProps` (if we don't want to retain them via the\n    // `retainDeprecatedProps` option) under one roof.\n    var deprecatedProps = transformed.map(function (r) {\n      var _a;\n      return ((_a = r.deprecatedProps) === null || _a === void 0 ? void 0 : _a.schema) || null;\n    }).filter(Boolean);\n    return [{\n      type: 'metadata',\n      label: exports.types.metadata,\n      schema: {\n        allOf: transformed.map(function (r) {\n          return r.schema;\n        })\n      },\n      deprecatedProps: deprecatedProps.length ? {\n        type: 'metadata',\n        schema: {\n          allOf: deprecatedProps\n        }\n      } : null\n    }];\n  }\n  // If this operation neither has any parameters or a request body then we should return null\n  // because there won't be any JSON Schema.\n  if (!operation.hasParameters() && !operation.hasRequestBody()) {\n    return null;\n  }\n  var typeKeys = Object.keys(exports.types);\n  var jsonSchema = (_a = [transformRequestBody()]).concat.apply(_a, transformParameters()).filter(Boolean);\n  // We should only include `components`, or even bother transforming components into JSON Schema,\n  // if we either have circular refs or if we have discriminator mapping refs somewhere and want to\n  // include them.\n  var shouldIncludeComponents = hasCircularRefs || hasDiscriminatorMappingRefs && opts.includeDiscriminatorMappingRefs;\n  var components = shouldIncludeComponents ? transformComponents() : false;\n  return jsonSchema.map(function (group) {\n    /**\n     * Since this library assumes that the schema has already been dereferenced, adding every\n     * component here that **isn't** circular adds a ton of bloat so it'd be cool if `components`\n     * was just the remaining `$ref` pointers that are still being referenced.\n     *\n     * @todo\n     */\n    if (components && shouldIncludeComponents) {\n      // Fixing typing and confused version mismatches\n      group.schema.components = components;\n    }\n    // Delete deprecatedProps if it's null on the schema.\n    if (!group.deprecatedProps) delete group.deprecatedProps;\n    return group;\n  }).sort(function (a, b) {\n    return typeKeys.indexOf(a.type) - typeKeys.indexOf(b.type);\n  });\n}\nexports.default = getParametersAsJSONSchema;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","__importDefault","exports","types","clone_object_1","require","helpers_1","matches_mimetype_1","openapi_to_json_schema_1","path","query","body","cookie","formData","header","metadata","getParametersAsJSONSchema","operation","api","opts","_a","hasCircularRefs","hasDiscriminatorMappingRefs","refLogger","ref","type","getDeprecated","schema","retainDeprecatedProperties","properties","deprecatedBody","default","requiredParams","required","allDeprecatedProps","keys","forEach","key","deprecatedProp","deprecated","includes","readOnly","deprecatedSchema","globalDefaults","hideReadOnlyProperties","hideWriteOnlyProperties","prevExampleSchemas","transformer","isPrimitive","$schema","getSchemaVersionString","transformRequestBody","requestBody","getRequestBody","Array","isArray","mediaType","mediaTypeObject","description","push","example","examples","values","map","filter","val","requestSchema","cleanedSchema","label","deprecatedProps","transformComponents","components","componentType","reduce","prev","next","schemaName","componentSchema","transformParameters","operationParams","getParameters","transformed","parameters","param","in","current","currentSchema","interimSchema","currentLocation","concat","name","content","contentKeys","contentType","jsonLikeContentTypes","json","Boolean","mergeIntoBodyAndMetadata","r","allOf","hasParameters","hasRequestBody","typeKeys","jsonSchema","shouldIncludeComponents","includeDiscriminatorMappingRefs","group","sort","a","b","indexOf"],"sources":["C:/Users/ryana/Desktop/CPSC 362 PROJECT/client/node_modules/oas/dist/operation/get-parameters-as-json-schema.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.types = void 0;\nvar clone_object_1 = __importDefault(require(\"../lib/clone-object\"));\nvar helpers_1 = require(\"../lib/helpers\");\nvar matches_mimetype_1 = __importDefault(require(\"../lib/matches-mimetype\"));\nvar openapi_to_json_schema_1 = __importStar(require(\"../lib/openapi-to-json-schema\"));\n/**\n * The order of this object determines how they will be sorted in the compiled JSON Schema\n * representation.\n *\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#parameterObject}\n * @see {@link https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#parameterObject}\n */\nexports.types = {\n    path: 'Path Params',\n    query: 'Query Params',\n    body: 'Body Params',\n    cookie: 'Cookie Params',\n    formData: 'Form Data',\n    header: 'Headers',\n    metadata: 'Metadata', // This a special type reserved for https://npm.im/api\n};\nfunction getParametersAsJSONSchema(operation, api, opts) {\n    var _a;\n    var hasCircularRefs = false;\n    var hasDiscriminatorMappingRefs = false;\n    function refLogger(ref, type) {\n        if (type === 'ref') {\n            hasCircularRefs = true;\n        }\n        else {\n            hasDiscriminatorMappingRefs = true;\n        }\n    }\n    function getDeprecated(schema, type) {\n        // If we wish to retain deprecated properties then we shouldn't split them out into the\n        // `deprecatedProps` object.\n        if (opts.retainDeprecatedProperties) {\n            return null;\n        }\n        // If there's no properties, bail\n        if (!schema || !schema.properties)\n            return null;\n        // Clone the original schema so this doesn't interfere with it\n        var deprecatedBody = (0, clone_object_1.default)(schema);\n        // Booleans are not valid for required in draft 4, 7 or 2020. Not sure why the typing thinks\n        // they are.\n        var requiredParams = (schema.required || []);\n        // Find all top-level deprecated properties from the schema - required and readOnly params are\n        // excluded.\n        var allDeprecatedProps = {};\n        Object.keys(deprecatedBody.properties).forEach(function (key) {\n            var deprecatedProp = deprecatedBody.properties[key];\n            if (deprecatedProp.deprecated && !requiredParams.includes(key) && !deprecatedProp.readOnly) {\n                allDeprecatedProps[key] = deprecatedProp;\n            }\n        });\n        // We know this is the right type. todo: don't use as\n        deprecatedBody.properties = allDeprecatedProps;\n        var deprecatedSchema = (0, openapi_to_json_schema_1.default)(deprecatedBody, {\n            globalDefaults: opts.globalDefaults,\n            hideReadOnlyProperties: opts.hideReadOnlyProperties,\n            hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n            prevExampleSchemas: [],\n            refLogger: refLogger,\n            transformer: opts.transformer,\n        });\n        // Check if the schema wasn't created or there's no deprecated properties\n        if (Object.keys(deprecatedSchema).length === 0 || Object.keys(deprecatedSchema.properties).length === 0) {\n            return null;\n        }\n        // Remove deprecated properties from the original schema\n        // Not using the clone here becuase we WANT this to affect the original\n        Object.keys(schema.properties).forEach(function (key) {\n            // We know this will always be a SchemaObject\n            if (schema.properties[key].deprecated && !requiredParams.includes(key)) {\n                delete schema.properties[key];\n            }\n        });\n        return {\n            type: type,\n            schema: (0, helpers_1.isPrimitive)(deprecatedSchema)\n                ? deprecatedSchema\n                : __assign(__assign({}, deprecatedSchema), { $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(deprecatedSchema, api) }),\n        };\n    }\n    /**\n     *\n     */\n    function transformRequestBody() {\n        var requestBody = operation.getRequestBody();\n        if (!requestBody || !Array.isArray(requestBody))\n            return null;\n        var mediaType = requestBody[0], mediaTypeObject = requestBody[1], description = requestBody[2];\n        var type = mediaType === 'application/x-www-form-urlencoded' ? 'formData' : 'body';\n        // If this schema is completely empty, don't bother processing it.\n        if (!mediaTypeObject.schema || !Object.keys(mediaTypeObject.schema).length) {\n            return null;\n        }\n        var prevExampleSchemas = [];\n        if ('example' in mediaTypeObject) {\n            prevExampleSchemas.push({ example: mediaTypeObject.example });\n        }\n        else if ('examples' in mediaTypeObject) {\n            prevExampleSchemas.push({\n                examples: Object.values(mediaTypeObject.examples)\n                    .map(function (example) { return example.value; })\n                    .filter(function (val) { return val !== undefined; }),\n            });\n        }\n        // We're cloning the request schema because we've had issues with request schemas that were\n        // dereferenced being processed multiple times because their component is also processed.\n        var requestSchema = (0, clone_object_1.default)(mediaTypeObject.schema);\n        var cleanedSchema = (0, openapi_to_json_schema_1.default)(requestSchema, {\n            globalDefaults: opts.globalDefaults,\n            hideReadOnlyProperties: opts.hideReadOnlyProperties,\n            hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n            prevExampleSchemas: prevExampleSchemas,\n            refLogger: refLogger,\n            transformer: opts.transformer,\n        });\n        // If this schema is **still** empty, don't bother returning it.\n        if (!Object.keys(cleanedSchema).length) {\n            return null;\n        }\n        return __assign({ type: type, label: exports.types[type], schema: (0, helpers_1.isPrimitive)(cleanedSchema)\n                ? cleanedSchema\n                : __assign(__assign({}, cleanedSchema), { $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(cleanedSchema, api) }), deprecatedProps: getDeprecated(cleanedSchema, type) }, (description ? { description: description } : {}));\n    }\n    function transformComponents() {\n        if (!('components' in api)) {\n            return false;\n        }\n        var components = __assign({}, Object.keys(api.components)\n            .map(function (componentType) {\n            var _a;\n            return (_a = {}, _a[componentType] = {}, _a);\n        })\n            .reduce(function (prev, next) { return Object.assign(prev, next); }, {}));\n        Object.keys(api.components).forEach(function (componentType) {\n            if (typeof api.components[componentType] === 'object' && !Array.isArray(api.components[componentType])) {\n                Object.keys(api.components[componentType]).forEach(function (schemaName) {\n                    var componentSchema = (0, clone_object_1.default)(api.components[componentType][schemaName]);\n                    components[componentType][schemaName] = (0, openapi_to_json_schema_1.default)(componentSchema, {\n                        globalDefaults: opts.globalDefaults,\n                        hideReadOnlyProperties: opts.hideReadOnlyProperties,\n                        hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n                        refLogger: refLogger,\n                        transformer: opts.transformer,\n                    });\n                });\n            }\n        });\n        // If none of our above component type placeholders got used let's clean them up.\n        Object.keys(components).forEach(function (componentType) {\n            if (!Object.keys(components[componentType]).length) {\n                delete components[componentType];\n            }\n        });\n        return components;\n    }\n    function transformParameters() {\n        var operationParams = operation.getParameters();\n        var transformed = Object.keys(exports.types)\n            .map(function (type) {\n            var required = [];\n            // This `as` actually *could* be a ref, but we don't want refs to pass through here, so\n            // `.in` will never match `type`\n            var parameters = operationParams.filter(function (param) { return param.in === type; });\n            if (parameters.length === 0) {\n                return null;\n            }\n            var properties = parameters.reduce(function (prev, current) {\n                var schema = {};\n                if ('schema' in current) {\n                    var currentSchema = current.schema ? (0, clone_object_1.default)(current.schema) : {};\n                    if (current.example) {\n                        // `example` can be present outside of the `schema` block so if it's there we should\n                        // pull it in so it can be handled and returned if it's valid.\n                        currentSchema.example = current.example;\n                    }\n                    else if (current.examples) {\n                        // `examples` isn't actually supported here in OAS 3.0, but we might as well support\n                        // it because `examples` is JSON Schema and that's fully supported in OAS 3.1.\n                        currentSchema.examples = current.examples;\n                    }\n                    if (current.deprecated)\n                        currentSchema.deprecated = current.deprecated;\n                    var interimSchema = (0, openapi_to_json_schema_1.default)(currentSchema, {\n                        currentLocation: \"/\".concat(current.name),\n                        globalDefaults: opts.globalDefaults,\n                        hideReadOnlyProperties: opts.hideReadOnlyProperties,\n                        hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n                        refLogger: refLogger,\n                        transformer: opts.transformer,\n                    });\n                    schema = (0, helpers_1.isPrimitive)(interimSchema)\n                        ? interimSchema\n                        : __assign(__assign({}, interimSchema), { \n                            // Note: this applies a `$schema` version to each field in the larger schema\n                            // object. It's not really **correct** but it's what we have to do because\n                            // there's a chance that the end user has indicated the schemas are different.\n                            $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(currentSchema, api) });\n                }\n                else if ('content' in current && typeof current.content === 'object') {\n                    var contentKeys = Object.keys(current.content);\n                    if (contentKeys.length) {\n                        var contentType = void 0;\n                        if (contentKeys.length === 1) {\n                            contentType = contentKeys[0];\n                        }\n                        else {\n                            // We should always try to prioritize `application/json` over any other possible\n                            // content that might be present on this schema.\n                            var jsonLikeContentTypes = contentKeys.filter(function (k) { return matches_mimetype_1.default.json(k); });\n                            if (jsonLikeContentTypes.length) {\n                                contentType = jsonLikeContentTypes[0];\n                            }\n                            else {\n                                contentType = contentKeys[0];\n                            }\n                        }\n                        if (typeof current.content[contentType] === 'object' && 'schema' in current.content[contentType]) {\n                            var currentSchema = current.content[contentType].schema\n                                ? (0, clone_object_1.default)(current.content[contentType].schema)\n                                : {};\n                            if (current.example) {\n                                // `example` can be present outside of the `schema` block so if it's there we\n                                // should pull it in so it can be handled and returned if it's valid.\n                                currentSchema.example = current.example;\n                            }\n                            else if (current.examples) {\n                                // `examples` isn't actually supported here in OAS 3.0, but we might as well\n                                // support it because `examples` is JSON Schema and that's fully supported in OAS\n                                // 3.1.\n                                currentSchema.examples = current.examples;\n                            }\n                            if (current.deprecated)\n                                currentSchema.deprecated = current.deprecated;\n                            var interimSchema = (0, openapi_to_json_schema_1.default)(currentSchema, {\n                                currentLocation: \"/\".concat(current.name),\n                                globalDefaults: opts.globalDefaults,\n                                hideReadOnlyProperties: opts.hideReadOnlyProperties,\n                                hideWriteOnlyProperties: opts.hideWriteOnlyProperties,\n                                refLogger: refLogger,\n                                transformer: opts.transformer,\n                            });\n                            schema = (0, helpers_1.isPrimitive)(interimSchema)\n                                ? interimSchema\n                                : __assign(__assign({}, interimSchema), { \n                                    // Note: this applies a `$schema` version to each field in the larger schema\n                                    // object. It's not really **correct** but it's what we have to do because\n                                    // there's a chance that the end user has indicated the schemas are different.\n                                    $schema: (0, openapi_to_json_schema_1.getSchemaVersionString)(currentSchema, api) });\n                        }\n                    }\n                }\n                // Parameter descriptions don't exist in `current.schema` so `constructSchema` will never\n                // have access to it.\n                if (current.description) {\n                    if (!(0, helpers_1.isPrimitive)(schema)) {\n                        schema.description = current.description;\n                    }\n                }\n                prev[current.name] = schema;\n                if (current.required) {\n                    required.push(current.name);\n                }\n                return prev;\n            }, {});\n            // This typing is technically WRONG :( but it's the best we can do for now.\n            var schema = {\n                type: 'object',\n                properties: properties,\n                required: required,\n            };\n            return {\n                type: type,\n                label: exports.types[type],\n                schema: schema,\n                deprecatedProps: getDeprecated(schema, type),\n            };\n        })\n            .filter(Boolean);\n        if (!opts.mergeIntoBodyAndMetadata) {\n            return transformed;\n        }\n        else if (!transformed.length) {\n            return [];\n        }\n        // If we want to merge parameters into a single metadata entry then we need to pull all\n        // available schemas and `deprecatedProps` (if we don't want to retain them via the\n        // `retainDeprecatedProps` option) under one roof.\n        var deprecatedProps = transformed.map(function (r) { var _a; return ((_a = r.deprecatedProps) === null || _a === void 0 ? void 0 : _a.schema) || null; }).filter(Boolean);\n        return [\n            {\n                type: 'metadata',\n                label: exports.types.metadata,\n                schema: {\n                    allOf: transformed.map(function (r) { return r.schema; }),\n                },\n                deprecatedProps: deprecatedProps.length\n                    ? {\n                        type: 'metadata',\n                        schema: {\n                            allOf: deprecatedProps,\n                        },\n                    }\n                    : null,\n            },\n        ];\n    }\n    // If this operation neither has any parameters or a request body then we should return null\n    // because there won't be any JSON Schema.\n    if (!operation.hasParameters() && !operation.hasRequestBody()) {\n        return null;\n    }\n    var typeKeys = Object.keys(exports.types);\n    var jsonSchema = (_a = [transformRequestBody()]).concat.apply(_a, transformParameters()).filter(Boolean);\n    // We should only include `components`, or even bother transforming components into JSON Schema,\n    // if we either have circular refs or if we have discriminator mapping refs somewhere and want to\n    // include them.\n    var shouldIncludeComponents = hasCircularRefs || (hasDiscriminatorMappingRefs && opts.includeDiscriminatorMappingRefs);\n    var components = shouldIncludeComponents ? transformComponents() : false;\n    return jsonSchema\n        .map(function (group) {\n        /**\n         * Since this library assumes that the schema has already been dereferenced, adding every\n         * component here that **isn't** circular adds a ton of bloat so it'd be cool if `components`\n         * was just the remaining `$ref` pointers that are still being referenced.\n         *\n         * @todo\n         */\n        if (components && shouldIncludeComponents) {\n            // Fixing typing and confused version mismatches\n            group.schema.components = components;\n        }\n        // Delete deprecatedProps if it's null on the schema.\n        if (!group.deprecatedProps)\n            delete group.deprecatedProps;\n        return group;\n    })\n        .sort(function (a, b) {\n        return typeKeys.indexOf(a.type) - typeKeys.indexOf(b.type);\n    });\n}\nexports.default = getParametersAsJSONSchema;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMb,MAAM,CAACc,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAC5F,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5B,IAAIG,IAAI,GAAGpB,MAAM,CAACqB,wBAAwB,CAACL,CAAC,EAAEC,CAAC,CAAC;EAChD,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIA,IAAI,GAAG,CAACJ,CAAC,CAACM,UAAU,GAAGF,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACI,YAAY,CAAC,EAAE;IACjFJ,IAAI,GAAG;MAAEK,UAAU,EAAE,IAAI;MAAEC,GAAG,EAAE,SAAAA,CAAA,EAAW;QAAE,OAAOV,CAAC,CAACC,CAAC,CAAC;MAAE;IAAE,CAAC;EAC/D;EACAjB,MAAM,CAAC2B,cAAc,CAACZ,CAAC,EAAEG,EAAE,EAAEE,IAAI,CAAC;AACtC,CAAC,GAAK,UAASL,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BF,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,CAAE,CAAC;AACH,IAAIW,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAM5B,MAAM,CAACc,MAAM,GAAI,UAASC,CAAC,EAAEc,CAAC,EAAE;EAC3F7B,MAAM,CAAC2B,cAAc,CAACZ,CAAC,EAAE,SAAS,EAAE;IAAEU,UAAU,EAAE,IAAI;IAAEK,KAAK,EAAED;EAAE,CAAC,CAAC;AACvE,CAAC,GAAI,UAASd,CAAC,EAAEc,CAAC,EAAE;EAChBd,CAAC,CAAC,SAAS,CAAC,GAAGc,CAAC;AACpB,CAAC,CAAC;AACF,IAAIE,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUC,GAAG,EAAE;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACV,UAAU,EAAE,OAAOU,GAAG;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIf,CAAC,IAAIe,GAAG,EAAE,IAAIf,CAAC,KAAK,SAAS,IAAIjB,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACqB,GAAG,EAAEf,CAAC,CAAC,EAAEJ,eAAe,CAACoB,MAAM,EAAED,GAAG,EAAEf,CAAC,CAAC;EACxIW,kBAAkB,CAACK,MAAM,EAAED,GAAG,CAAC;EAC/B,OAAOC,MAAM;AACjB,CAAC;AACD,IAAIC,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUF,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACV,UAAU,GAAIU,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDhC,MAAM,CAAC2B,cAAc,CAACQ,OAAO,EAAE,YAAY,EAAE;EAAEL,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DK,OAAO,CAACC,KAAK,GAAG,KAAK,CAAC;AACtB,IAAIC,cAAc,GAAGH,eAAe,CAACI,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACpE,IAAIC,SAAS,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,IAAIE,kBAAkB,GAAGN,eAAe,CAACI,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAC5E,IAAIG,wBAAwB,GAAGV,YAAY,CAACO,OAAO,CAAC,+BAA+B,CAAC,CAAC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACC,KAAK,GAAG;EACZM,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,cAAc;EACrBC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,eAAe;EACvBC,QAAQ,EAAE,WAAW;EACrBC,MAAM,EAAE,SAAS;EACjBC,QAAQ,EAAE,UAAU,CAAE;AAC1B,CAAC;AACD,SAASC,yBAAyBA,CAACC,SAAS,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACrD,IAAIC,EAAE;EACN,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,2BAA2B,GAAG,KAAK;EACvC,SAASC,SAASA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAC1B,IAAIA,IAAI,KAAK,KAAK,EAAE;MAChBJ,eAAe,GAAG,IAAI;IAC1B,CAAC,MACI;MACDC,2BAA2B,GAAG,IAAI;IACtC;EACJ;EACA,SAASI,aAAaA,CAACC,MAAM,EAAEF,IAAI,EAAE;IACjC;IACA;IACA,IAAIN,IAAI,CAACS,0BAA0B,EAAE;MACjC,OAAO,IAAI;IACf;IACA;IACA,IAAI,CAACD,MAAM,IAAI,CAACA,MAAM,CAACE,UAAU,EAC7B,OAAO,IAAI;IACf;IACA,IAAIC,cAAc,GAAG,CAAC,CAAC,EAAE1B,cAAc,CAAC2B,OAAO,EAAEJ,MAAM,CAAC;IACxD;IACA;IACA,IAAIK,cAAc,GAAIL,MAAM,CAACM,QAAQ,IAAI,EAAG;IAC5C;IACA;IACA,IAAIC,kBAAkB,GAAG,CAAC,CAAC;IAC3BnE,MAAM,CAACoE,IAAI,CAACL,cAAc,CAACD,UAAU,CAAC,CAACO,OAAO,CAAC,UAAUC,GAAG,EAAE;MAC1D,IAAIC,cAAc,GAAGR,cAAc,CAACD,UAAU,CAACQ,GAAG,CAAC;MACnD,IAAIC,cAAc,CAACC,UAAU,IAAI,CAACP,cAAc,CAACQ,QAAQ,CAACH,GAAG,CAAC,IAAI,CAACC,cAAc,CAACG,QAAQ,EAAE;QACxFP,kBAAkB,CAACG,GAAG,CAAC,GAAGC,cAAc;MAC5C;IACJ,CAAC,CAAC;IACF;IACAR,cAAc,CAACD,UAAU,GAAGK,kBAAkB;IAC9C,IAAIQ,gBAAgB,GAAG,CAAC,CAAC,EAAElC,wBAAwB,CAACuB,OAAO,EAAED,cAAc,EAAE;MACzEa,cAAc,EAAExB,IAAI,CAACwB,cAAc;MACnCC,sBAAsB,EAAEzB,IAAI,CAACyB,sBAAsB;MACnDC,uBAAuB,EAAE1B,IAAI,CAAC0B,uBAAuB;MACrDC,kBAAkB,EAAE,EAAE;MACtBvB,SAAS,EAAEA,SAAS;MACpBwB,WAAW,EAAE5B,IAAI,CAAC4B;IACtB,CAAC,CAAC;IACF;IACA,IAAIhF,MAAM,CAACoE,IAAI,CAACO,gBAAgB,CAAC,CAACpE,MAAM,KAAK,CAAC,IAAIP,MAAM,CAACoE,IAAI,CAACO,gBAAgB,CAACb,UAAU,CAAC,CAACvD,MAAM,KAAK,CAAC,EAAE;MACrG,OAAO,IAAI;IACf;IACA;IACA;IACAP,MAAM,CAACoE,IAAI,CAACR,MAAM,CAACE,UAAU,CAAC,CAACO,OAAO,CAAC,UAAUC,GAAG,EAAE;MAClD;MACA,IAAIV,MAAM,CAACE,UAAU,CAACQ,GAAG,CAAC,CAACE,UAAU,IAAI,CAACP,cAAc,CAACQ,QAAQ,CAACH,GAAG,CAAC,EAAE;QACpE,OAAOV,MAAM,CAACE,UAAU,CAACQ,GAAG,CAAC;MACjC;IACJ,CAAC,CAAC;IACF,OAAO;MACHZ,IAAI,EAAEA,IAAI;MACVE,MAAM,EAAE,CAAC,CAAC,EAAErB,SAAS,CAAC0C,WAAW,EAAEN,gBAAgB,CAAC,GAC9CA,gBAAgB,GAChB5E,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE4E,gBAAgB,CAAC,EAAE;QAAEO,OAAO,EAAE,CAAC,CAAC,EAAEzC,wBAAwB,CAAC0C,sBAAsB,EAAER,gBAAgB,EAAExB,GAAG;MAAE,CAAC;IAC3I,CAAC;EACL;EACA;AACJ;AACA;EACI,SAASiC,oBAAoBA,CAAA,EAAG;IAC5B,IAAIC,WAAW,GAAGnC,SAAS,CAACoC,cAAc,CAAC,CAAC;IAC5C,IAAI,CAACD,WAAW,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,WAAW,CAAC,EAC3C,OAAO,IAAI;IACf,IAAII,SAAS,GAAGJ,WAAW,CAAC,CAAC,CAAC;MAAEK,eAAe,GAAGL,WAAW,CAAC,CAAC,CAAC;MAAEM,WAAW,GAAGN,WAAW,CAAC,CAAC,CAAC;IAC9F,IAAI3B,IAAI,GAAG+B,SAAS,KAAK,mCAAmC,GAAG,UAAU,GAAG,MAAM;IAClF;IACA,IAAI,CAACC,eAAe,CAAC9B,MAAM,IAAI,CAAC5D,MAAM,CAACoE,IAAI,CAACsB,eAAe,CAAC9B,MAAM,CAAC,CAACrD,MAAM,EAAE;MACxE,OAAO,IAAI;IACf;IACA,IAAIwE,kBAAkB,GAAG,EAAE;IAC3B,IAAI,SAAS,IAAIW,eAAe,EAAE;MAC9BX,kBAAkB,CAACa,IAAI,CAAC;QAAEC,OAAO,EAAEH,eAAe,CAACG;MAAQ,CAAC,CAAC;IACjE,CAAC,MACI,IAAI,UAAU,IAAIH,eAAe,EAAE;MACpCX,kBAAkB,CAACa,IAAI,CAAC;QACpBE,QAAQ,EAAE9F,MAAM,CAAC+F,MAAM,CAACL,eAAe,CAACI,QAAQ,CAAC,CAC5CE,GAAG,CAAC,UAAUH,OAAO,EAAE;UAAE,OAAOA,OAAO,CAAC/D,KAAK;QAAE,CAAC,CAAC,CACjDmE,MAAM,CAAC,UAAUC,GAAG,EAAE;UAAE,OAAOA,GAAG,KAAK/E,SAAS;QAAE,CAAC;MAC5D,CAAC,CAAC;IACN;IACA;IACA;IACA,IAAIgF,aAAa,GAAG,CAAC,CAAC,EAAE9D,cAAc,CAAC2B,OAAO,EAAE0B,eAAe,CAAC9B,MAAM,CAAC;IACvE,IAAIwC,aAAa,GAAG,CAAC,CAAC,EAAE3D,wBAAwB,CAACuB,OAAO,EAAEmC,aAAa,EAAE;MACrEvB,cAAc,EAAExB,IAAI,CAACwB,cAAc;MACnCC,sBAAsB,EAAEzB,IAAI,CAACyB,sBAAsB;MACnDC,uBAAuB,EAAE1B,IAAI,CAAC0B,uBAAuB;MACrDC,kBAAkB,EAAEA,kBAAkB;MACtCvB,SAAS,EAAEA,SAAS;MACpBwB,WAAW,EAAE5B,IAAI,CAAC4B;IACtB,CAAC,CAAC;IACF;IACA,IAAI,CAAChF,MAAM,CAACoE,IAAI,CAACgC,aAAa,CAAC,CAAC7F,MAAM,EAAE;MACpC,OAAO,IAAI;IACf;IACA,OAAOR,QAAQ,CAAC;MAAE2D,IAAI,EAAEA,IAAI;MAAE2C,KAAK,EAAElE,OAAO,CAACC,KAAK,CAACsB,IAAI,CAAC;MAAEE,MAAM,EAAE,CAAC,CAAC,EAAErB,SAAS,CAAC0C,WAAW,EAAEmB,aAAa,CAAC,GACjGA,aAAa,GACbrG,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEqG,aAAa,CAAC,EAAE;QAAElB,OAAO,EAAE,CAAC,CAAC,EAAEzC,wBAAwB,CAAC0C,sBAAsB,EAAEiB,aAAa,EAAEjD,GAAG;MAAE,CAAC,CAAC;MAAEmD,eAAe,EAAE3C,aAAa,CAACyC,aAAa,EAAE1C,IAAI;IAAE,CAAC,EAAGiC,WAAW,GAAG;MAAEA,WAAW,EAAEA;IAAY,CAAC,GAAG,CAAC,CAAE,CAAC;EACrP;EACA,SAASY,mBAAmBA,CAAA,EAAG;IAC3B,IAAI,EAAE,YAAY,IAAIpD,GAAG,CAAC,EAAE;MACxB,OAAO,KAAK;IAChB;IACA,IAAIqD,UAAU,GAAGzG,QAAQ,CAAC,CAAC,CAAC,EAAEC,MAAM,CAACoE,IAAI,CAACjB,GAAG,CAACqD,UAAU,CAAC,CACpDR,GAAG,CAAC,UAAUS,aAAa,EAAE;MAC9B,IAAIpD,EAAE;MACN,OAAQA,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,CAACoD,aAAa,CAAC,GAAG,CAAC,CAAC,EAAEpD,EAAE;IAC/C,CAAC,CAAC,CACGqD,MAAM,CAAC,UAAUC,IAAI,EAAEC,IAAI,EAAE;MAAE,OAAO5G,MAAM,CAACC,MAAM,CAAC0G,IAAI,EAAEC,IAAI,CAAC;IAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E5G,MAAM,CAACoE,IAAI,CAACjB,GAAG,CAACqD,UAAU,CAAC,CAACnC,OAAO,CAAC,UAAUoC,aAAa,EAAE;MACzD,IAAI,OAAOtD,GAAG,CAACqD,UAAU,CAACC,aAAa,CAAC,KAAK,QAAQ,IAAI,CAAClB,KAAK,CAACC,OAAO,CAACrC,GAAG,CAACqD,UAAU,CAACC,aAAa,CAAC,CAAC,EAAE;QACpGzG,MAAM,CAACoE,IAAI,CAACjB,GAAG,CAACqD,UAAU,CAACC,aAAa,CAAC,CAAC,CAACpC,OAAO,CAAC,UAAUwC,UAAU,EAAE;UACrE,IAAIC,eAAe,GAAG,CAAC,CAAC,EAAEzE,cAAc,CAAC2B,OAAO,EAAEb,GAAG,CAACqD,UAAU,CAACC,aAAa,CAAC,CAACI,UAAU,CAAC,CAAC;UAC5FL,UAAU,CAACC,aAAa,CAAC,CAACI,UAAU,CAAC,GAAG,CAAC,CAAC,EAAEpE,wBAAwB,CAACuB,OAAO,EAAE8C,eAAe,EAAE;YAC3FlC,cAAc,EAAExB,IAAI,CAACwB,cAAc;YACnCC,sBAAsB,EAAEzB,IAAI,CAACyB,sBAAsB;YACnDC,uBAAuB,EAAE1B,IAAI,CAAC0B,uBAAuB;YACrDtB,SAAS,EAAEA,SAAS;YACpBwB,WAAW,EAAE5B,IAAI,CAAC4B;UACtB,CAAC,CAAC;QACN,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IACF;IACAhF,MAAM,CAACoE,IAAI,CAACoC,UAAU,CAAC,CAACnC,OAAO,CAAC,UAAUoC,aAAa,EAAE;MACrD,IAAI,CAACzG,MAAM,CAACoE,IAAI,CAACoC,UAAU,CAACC,aAAa,CAAC,CAAC,CAAClG,MAAM,EAAE;QAChD,OAAOiG,UAAU,CAACC,aAAa,CAAC;MACpC;IACJ,CAAC,CAAC;IACF,OAAOD,UAAU;EACrB;EACA,SAASO,mBAAmBA,CAAA,EAAG;IAC3B,IAAIC,eAAe,GAAG9D,SAAS,CAAC+D,aAAa,CAAC,CAAC;IAC/C,IAAIC,WAAW,GAAGlH,MAAM,CAACoE,IAAI,CAACjC,OAAO,CAACC,KAAK,CAAC,CACvC4D,GAAG,CAAC,UAAUtC,IAAI,EAAE;MACrB,IAAIQ,QAAQ,GAAG,EAAE;MACjB;MACA;MACA,IAAIiD,UAAU,GAAGH,eAAe,CAACf,MAAM,CAAC,UAAUmB,KAAK,EAAE;QAAE,OAAOA,KAAK,CAACC,EAAE,KAAK3D,IAAI;MAAE,CAAC,CAAC;MACvF,IAAIyD,UAAU,CAAC5G,MAAM,KAAK,CAAC,EAAE;QACzB,OAAO,IAAI;MACf;MACA,IAAIuD,UAAU,GAAGqD,UAAU,CAACT,MAAM,CAAC,UAAUC,IAAI,EAAEW,OAAO,EAAE;QACxD,IAAI1D,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,QAAQ,IAAI0D,OAAO,EAAE;UACrB,IAAIC,aAAa,GAAGD,OAAO,CAAC1D,MAAM,GAAG,CAAC,CAAC,EAAEvB,cAAc,CAAC2B,OAAO,EAAEsD,OAAO,CAAC1D,MAAM,CAAC,GAAG,CAAC,CAAC;UACrF,IAAI0D,OAAO,CAACzB,OAAO,EAAE;YACjB;YACA;YACA0B,aAAa,CAAC1B,OAAO,GAAGyB,OAAO,CAACzB,OAAO;UAC3C,CAAC,MACI,IAAIyB,OAAO,CAACxB,QAAQ,EAAE;YACvB;YACA;YACAyB,aAAa,CAACzB,QAAQ,GAAGwB,OAAO,CAACxB,QAAQ;UAC7C;UACA,IAAIwB,OAAO,CAAC9C,UAAU,EAClB+C,aAAa,CAAC/C,UAAU,GAAG8C,OAAO,CAAC9C,UAAU;UACjD,IAAIgD,aAAa,GAAG,CAAC,CAAC,EAAE/E,wBAAwB,CAACuB,OAAO,EAAEuD,aAAa,EAAE;YACrEE,eAAe,EAAE,GAAG,CAACC,MAAM,CAACJ,OAAO,CAACK,IAAI,CAAC;YACzC/C,cAAc,EAAExB,IAAI,CAACwB,cAAc;YACnCC,sBAAsB,EAAEzB,IAAI,CAACyB,sBAAsB;YACnDC,uBAAuB,EAAE1B,IAAI,CAAC0B,uBAAuB;YACrDtB,SAAS,EAAEA,SAAS;YACpBwB,WAAW,EAAE5B,IAAI,CAAC4B;UACtB,CAAC,CAAC;UACFpB,MAAM,GAAG,CAAC,CAAC,EAAErB,SAAS,CAAC0C,WAAW,EAAEuC,aAAa,CAAC,GAC5CA,aAAa,GACbzH,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEyH,aAAa,CAAC,EAAE;YACpC;YACA;YACA;YACAtC,OAAO,EAAE,CAAC,CAAC,EAAEzC,wBAAwB,CAAC0C,sBAAsB,EAAEoC,aAAa,EAAEpE,GAAG;UAAE,CAAC,CAAC;QAChG,CAAC,MACI,IAAI,SAAS,IAAImE,OAAO,IAAI,OAAOA,OAAO,CAACM,OAAO,KAAK,QAAQ,EAAE;UAClE,IAAIC,WAAW,GAAG7H,MAAM,CAACoE,IAAI,CAACkD,OAAO,CAACM,OAAO,CAAC;UAC9C,IAAIC,WAAW,CAACtH,MAAM,EAAE;YACpB,IAAIuH,WAAW,GAAG,KAAK,CAAC;YACxB,IAAID,WAAW,CAACtH,MAAM,KAAK,CAAC,EAAE;cAC1BuH,WAAW,GAAGD,WAAW,CAAC,CAAC,CAAC;YAChC,CAAC,MACI;cACD;cACA;cACA,IAAIE,oBAAoB,GAAGF,WAAW,CAAC5B,MAAM,CAAC,UAAUhF,CAAC,EAAE;gBAAE,OAAOuB,kBAAkB,CAACwB,OAAO,CAACgE,IAAI,CAAC/G,CAAC,CAAC;cAAE,CAAC,CAAC;cAC1G,IAAI8G,oBAAoB,CAACxH,MAAM,EAAE;gBAC7BuH,WAAW,GAAGC,oBAAoB,CAAC,CAAC,CAAC;cACzC,CAAC,MACI;gBACDD,WAAW,GAAGD,WAAW,CAAC,CAAC,CAAC;cAChC;YACJ;YACA,IAAI,OAAOP,OAAO,CAACM,OAAO,CAACE,WAAW,CAAC,KAAK,QAAQ,IAAI,QAAQ,IAAIR,OAAO,CAACM,OAAO,CAACE,WAAW,CAAC,EAAE;cAC9F,IAAIP,aAAa,GAAGD,OAAO,CAACM,OAAO,CAACE,WAAW,CAAC,CAAClE,MAAM,GACjD,CAAC,CAAC,EAAEvB,cAAc,CAAC2B,OAAO,EAAEsD,OAAO,CAACM,OAAO,CAACE,WAAW,CAAC,CAAClE,MAAM,CAAC,GAChE,CAAC,CAAC;cACR,IAAI0D,OAAO,CAACzB,OAAO,EAAE;gBACjB;gBACA;gBACA0B,aAAa,CAAC1B,OAAO,GAAGyB,OAAO,CAACzB,OAAO;cAC3C,CAAC,MACI,IAAIyB,OAAO,CAACxB,QAAQ,EAAE;gBACvB;gBACA;gBACA;gBACAyB,aAAa,CAACzB,QAAQ,GAAGwB,OAAO,CAACxB,QAAQ;cAC7C;cACA,IAAIwB,OAAO,CAAC9C,UAAU,EAClB+C,aAAa,CAAC/C,UAAU,GAAG8C,OAAO,CAAC9C,UAAU;cACjD,IAAIgD,aAAa,GAAG,CAAC,CAAC,EAAE/E,wBAAwB,CAACuB,OAAO,EAAEuD,aAAa,EAAE;gBACrEE,eAAe,EAAE,GAAG,CAACC,MAAM,CAACJ,OAAO,CAACK,IAAI,CAAC;gBACzC/C,cAAc,EAAExB,IAAI,CAACwB,cAAc;gBACnCC,sBAAsB,EAAEzB,IAAI,CAACyB,sBAAsB;gBACnDC,uBAAuB,EAAE1B,IAAI,CAAC0B,uBAAuB;gBACrDtB,SAAS,EAAEA,SAAS;gBACpBwB,WAAW,EAAE5B,IAAI,CAAC4B;cACtB,CAAC,CAAC;cACFpB,MAAM,GAAG,CAAC,CAAC,EAAErB,SAAS,CAAC0C,WAAW,EAAEuC,aAAa,CAAC,GAC5CA,aAAa,GACbzH,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEyH,aAAa,CAAC,EAAE;gBACpC;gBACA;gBACA;gBACAtC,OAAO,EAAE,CAAC,CAAC,EAAEzC,wBAAwB,CAAC0C,sBAAsB,EAAEoC,aAAa,EAAEpE,GAAG;cAAE,CAAC,CAAC;YAChG;UACJ;QACJ;QACA;QACA;QACA,IAAImE,OAAO,CAAC3B,WAAW,EAAE;UACrB,IAAI,CAAC,CAAC,CAAC,EAAEpD,SAAS,CAAC0C,WAAW,EAAErB,MAAM,CAAC,EAAE;YACrCA,MAAM,CAAC+B,WAAW,GAAG2B,OAAO,CAAC3B,WAAW;UAC5C;QACJ;QACAgB,IAAI,CAACW,OAAO,CAACK,IAAI,CAAC,GAAG/D,MAAM;QAC3B,IAAI0D,OAAO,CAACpD,QAAQ,EAAE;UAClBA,QAAQ,CAAC0B,IAAI,CAAC0B,OAAO,CAACK,IAAI,CAAC;QAC/B;QACA,OAAOhB,IAAI;MACf,CAAC,EAAE,CAAC,CAAC,CAAC;MACN;MACA,IAAI/C,MAAM,GAAG;QACTF,IAAI,EAAE,QAAQ;QACdI,UAAU,EAAEA,UAAU;QACtBI,QAAQ,EAAEA;MACd,CAAC;MACD,OAAO;QACHR,IAAI,EAAEA,IAAI;QACV2C,KAAK,EAAElE,OAAO,CAACC,KAAK,CAACsB,IAAI,CAAC;QAC1BE,MAAM,EAAEA,MAAM;QACd0C,eAAe,EAAE3C,aAAa,CAACC,MAAM,EAAEF,IAAI;MAC/C,CAAC;IACL,CAAC,CAAC,CACGuC,MAAM,CAACgC,OAAO,CAAC;IACpB,IAAI,CAAC7E,IAAI,CAAC8E,wBAAwB,EAAE;MAChC,OAAOhB,WAAW;IACtB,CAAC,MACI,IAAI,CAACA,WAAW,CAAC3G,MAAM,EAAE;MAC1B,OAAO,EAAE;IACb;IACA;IACA;IACA;IACA,IAAI+F,eAAe,GAAGY,WAAW,CAAClB,GAAG,CAAC,UAAUmC,CAAC,EAAE;MAAE,IAAI9E,EAAE;MAAE,OAAO,CAAC,CAACA,EAAE,GAAG8E,CAAC,CAAC7B,eAAe,MAAM,IAAI,IAAIjD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACO,MAAM,KAAK,IAAI;IAAE,CAAC,CAAC,CAACqC,MAAM,CAACgC,OAAO,CAAC;IACzK,OAAO,CACH;MACIvE,IAAI,EAAE,UAAU;MAChB2C,KAAK,EAAElE,OAAO,CAACC,KAAK,CAACY,QAAQ;MAC7BY,MAAM,EAAE;QACJwE,KAAK,EAAElB,WAAW,CAAClB,GAAG,CAAC,UAAUmC,CAAC,EAAE;UAAE,OAAOA,CAAC,CAACvE,MAAM;QAAE,CAAC;MAC5D,CAAC;MACD0C,eAAe,EAAEA,eAAe,CAAC/F,MAAM,GACjC;QACEmD,IAAI,EAAE,UAAU;QAChBE,MAAM,EAAE;UACJwE,KAAK,EAAE9B;QACX;MACJ,CAAC,GACC;IACV,CAAC,CACJ;EACL;EACA;EACA;EACA,IAAI,CAACpD,SAAS,CAACmF,aAAa,CAAC,CAAC,IAAI,CAACnF,SAAS,CAACoF,cAAc,CAAC,CAAC,EAAE;IAC3D,OAAO,IAAI;EACf;EACA,IAAIC,QAAQ,GAAGvI,MAAM,CAACoE,IAAI,CAACjC,OAAO,CAACC,KAAK,CAAC;EACzC,IAAIoG,UAAU,GAAG,CAACnF,EAAE,GAAG,CAAC+B,oBAAoB,CAAC,CAAC,CAAC,EAAEsC,MAAM,CAAC9G,KAAK,CAACyC,EAAE,EAAE0D,mBAAmB,CAAC,CAAC,CAAC,CAACd,MAAM,CAACgC,OAAO,CAAC;EACxG;EACA;EACA;EACA,IAAIQ,uBAAuB,GAAGnF,eAAe,IAAKC,2BAA2B,IAAIH,IAAI,CAACsF,+BAAgC;EACtH,IAAIlC,UAAU,GAAGiC,uBAAuB,GAAGlC,mBAAmB,CAAC,CAAC,GAAG,KAAK;EACxE,OAAOiC,UAAU,CACZxC,GAAG,CAAC,UAAU2C,KAAK,EAAE;IACtB;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAInC,UAAU,IAAIiC,uBAAuB,EAAE;MACvC;MACAE,KAAK,CAAC/E,MAAM,CAAC4C,UAAU,GAAGA,UAAU;IACxC;IACA;IACA,IAAI,CAACmC,KAAK,CAACrC,eAAe,EACtB,OAAOqC,KAAK,CAACrC,eAAe;IAChC,OAAOqC,KAAK;EAChB,CAAC,CAAC,CACGC,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACtB,OAAOP,QAAQ,CAACQ,OAAO,CAACF,CAAC,CAACnF,IAAI,CAAC,GAAG6E,QAAQ,CAACQ,OAAO,CAACD,CAAC,CAACpF,IAAI,CAAC;EAC9D,CAAC,CAAC;AACN;AACAvB,OAAO,CAAC6B,OAAO,GAAGf,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}