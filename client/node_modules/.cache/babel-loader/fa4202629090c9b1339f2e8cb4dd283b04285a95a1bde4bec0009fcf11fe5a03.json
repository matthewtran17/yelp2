{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"ajv/dist/core\");\nconst draft4_1 = require(\"./vocabulary/draft4\");\nconst discriminator_1 = require(\"ajv/dist/vocabularies/discriminator\");\nconst draft4MetaSchema = require(\"./refs/json-schema-draft-04.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-04/schema\";\nclass Ajv extends core_1.default {\n  constructor(opts = {}) {\n    super({\n      ...opts,\n      schemaId: \"id\"\n    });\n  }\n  _addVocabularies() {\n    super._addVocabularies();\n    draft4_1.default.forEach(v => this.addVocabulary(v));\n    if (this.opts.discriminator) this.addKeyword(discriminator_1.default);\n  }\n  _addDefaultMetaSchema() {\n    super._addDefaultMetaSchema();\n    if (!this.opts.meta) return;\n    const metaSchema = this.opts.$data ? this.$dataMetaSchema(draft4MetaSchema, META_SUPPORT_DATA) : draft4MetaSchema;\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n  }\n  defaultMeta() {\n    return this.opts.defaultMeta = super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined);\n  }\n}\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Ajv;\nvar core_2 = require(\"ajv/dist/core\");\nObject.defineProperty(exports, \"KeywordCxt\", {\n  enumerable: true,\n  get: function () {\n    return core_2.KeywordCxt;\n  }\n});\nvar core_3 = require(\"ajv/dist/core\");\nObject.defineProperty(exports, \"_\", {\n  enumerable: true,\n  get: function () {\n    return core_3._;\n  }\n});\nObject.defineProperty(exports, \"str\", {\n  enumerable: true,\n  get: function () {\n    return core_3.str;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return core_3.stringify;\n  }\n});\nObject.defineProperty(exports, \"nil\", {\n  enumerable: true,\n  get: function () {\n    return core_3.nil;\n  }\n});\nObject.defineProperty(exports, \"Name\", {\n  enumerable: true,\n  get: function () {\n    return core_3.Name;\n  }\n});\nObject.defineProperty(exports, \"CodeGen\", {\n  enumerable: true,\n  get: function () {\n    return core_3.CodeGen;\n  }\n});","map":{"version":3,"names":["core_1","require","draft4_1","discriminator_1","draft4MetaSchema","META_SUPPORT_DATA","META_SCHEMA_ID","Ajv","default","constructor","opts","schemaId","_addVocabularies","forEach","v","addVocabulary","discriminator","addKeyword","_addDefaultMetaSchema","meta","metaSchema","$data","$dataMetaSchema","addMetaSchema","refs","defaultMeta","getSchema","undefined","module","exports","Object","defineProperty","value","core_2","enumerable","get","KeywordCxt","core_3","_","str","stringify","nil","Name","CodeGen"],"sources":["C:\\Users\\ryana\\Desktop\\CPSC 362 PROJECT\\client\\node_modules\\ajv-draft-04\\src\\index.ts"],"sourcesContent":["import type {AnySchemaObject, Options} from \"ajv/dist/core\"\nimport AjvCore from \"ajv/dist/core\"\nimport draft4Vocabularies from \"./vocabulary/draft4\"\nimport discriminator from \"ajv/dist/vocabularies/discriminator\"\nimport * as draft4MetaSchema from \"./refs/json-schema-draft-04.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-04/schema\"\n\nclass Ajv extends AjvCore {\n  constructor(opts: Options = {}) {\n    super({\n      ...opts,\n      schemaId: \"id\",\n    })\n  }\n\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft4Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft4MetaSchema, META_SUPPORT_DATA)\n      : draft4MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"ajv/dist/types\"\n\nexport {\n  Plugin,\n  Options,\n  CodeOptions,\n  InstanceOptions,\n  Logger,\n  ErrorsTextOptions,\n} from \"ajv/dist/core\"\nexport {SchemaCxt, SchemaObjCxt} from \"ajv/dist/core\"\nexport {KeywordCxt} from \"ajv/dist/core\"\nexport {DefinedError} from \"ajv/dist/core\"\nexport {JSONType} from \"ajv/dist/core\"\nexport {JSONSchemaType} from \"ajv/dist/core\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"ajv/dist/core\"\n"],"mappings":";;;;;;AACA,MAAAA,MAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AACA,MAAAE,eAAA,GAAAF,OAAA;AACA,MAAAG,gBAAA,GAAAH,OAAA;AAEA,MAAMI,iBAAiB,GAAG,CAAC,aAAa,CAAC;AAEzC,MAAMC,cAAc,GAAG,wCAAwC;AAE/D,MAAMC,GAAI,SAAQP,MAAA,CAAAQ,OAAO;EACvBC,YAAYC,IAAA,GAAgB,EAAE;IAC5B,KAAK,CAAC;MACJ,GAAGA,IAAI;MACPC,QAAQ,EAAE;KACX,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IACd,KAAK,CAACA,gBAAgB,EAAE;IACxBV,QAAA,CAAAM,OAAkB,CAACK,OAAO,CAAEC,CAAC,IAAK,IAAI,CAACC,aAAa,CAACD,CAAC,CAAC,CAAC;IACxD,IAAI,IAAI,CAACJ,IAAI,CAACM,aAAa,EAAE,IAAI,CAACC,UAAU,CAACd,eAAA,CAAAK,OAAa,CAAC;EAC7D;EAEAU,qBAAqBA,CAAA;IACnB,KAAK,CAACA,qBAAqB,EAAE;IAC7B,IAAI,CAAC,IAAI,CAACR,IAAI,CAACS,IAAI,EAAE;IACrB,MAAMC,UAAU,GAAG,IAAI,CAACV,IAAI,CAACW,KAAK,GAC9B,IAAI,CAACC,eAAe,CAAClB,gBAAgB,EAAEC,iBAAiB,CAAC,GACzDD,gBAAgB;IACpB,IAAI,CAACmB,aAAa,CAACH,UAAU,EAAEd,cAAc,EAAE,KAAK,CAAC;IACrD,IAAI,CAACkB,IAAI,CAAC,+BAA+B,CAAC,GAAGlB,cAAc;EAC7D;EAEAmB,WAAWA,CAAA;IACT,OAAQ,IAAI,CAACf,IAAI,CAACe,WAAW,GAC3B,KAAK,CAACA,WAAW,EAAE,KAAK,IAAI,CAACC,SAAS,CAACpB,cAAc,CAAC,GAAGA,cAAc,GAAGqB,SAAS,CAAC;EACxF;;AAGFC,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGtB,GAAG;AAC9BuB,MAAM,CAACC,cAAc,CAACF,OAAO,EAAE,YAAY,EAAE;EAACG,KAAK,EAAE;AAAI,CAAC,CAAC;AAE3DH,OAAA,CAAArB,OAAA,GAAeD,GAAG;AAiClB,IAAA0B,MAAA,GAAAhC,OAAA;AAAQ6B,MAAA,CAAAC,cAAA,CAAAF,OAAA;EAAAK,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAF,MAAA,CAAAG,UAAU;EAAA;AAAA;AAIlB,IAAAC,MAAA,GAAApC,OAAA;AAAQ6B,MAAA,CAAAC,cAAA,CAAAF,OAAA;EAAAK,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,MAAA,CAAAC,CAAC;EAAA;AAAA;AAAER,MAAA,CAAAC,cAAA,CAAAF,OAAA;EAAAK,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,MAAA,CAAAE,GAAG;EAAA;AAAA;AAAET,MAAA,CAAAC,cAAA,CAAAF,OAAA;EAAAK,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,MAAA,CAAAG,SAAS;EAAA;AAAA;AAAEV,MAAA,CAAAC,cAAA,CAAAF,OAAA;EAAAK,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,MAAA,CAAAI,GAAG;EAAA;AAAA;AAAEX,MAAA,CAAAC,cAAA,CAAAF,OAAA;EAAAK,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,MAAA,CAAAK,IAAI;EAAA;AAAA;AAAQZ,MAAA,CAAAC,cAAA,CAAAF,OAAA;EAAAK,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,MAAA,CAAAM,OAAO;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}