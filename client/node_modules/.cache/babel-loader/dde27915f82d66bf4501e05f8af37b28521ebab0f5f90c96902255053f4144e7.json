{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst locatePath = require('locate-path');\nconst pathExists = require('path-exists');\nconst stop = Symbol('findUp.stop');\nmodule.exports = async (name, options = {}) => {\n  let directory = path.resolve(options.cwd || '');\n  const {\n    root\n  } = path.parse(directory);\n  const paths = [].concat(name);\n  const runMatcher = async locateOptions => {\n    if (typeof name !== 'function') {\n      return locatePath(paths, locateOptions);\n    }\n    const foundPath = await name(locateOptions.cwd);\n    if (typeof foundPath === 'string') {\n      return locatePath([foundPath], locateOptions);\n    }\n    return foundPath;\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // eslint-disable-next-line no-await-in-loop\n    const foundPath = await runMatcher({\n      ...options,\n      cwd: directory\n    });\n    if (foundPath === stop) {\n      return;\n    }\n    if (foundPath) {\n      return path.resolve(directory, foundPath);\n    }\n    if (directory === root) {\n      return;\n    }\n    directory = path.dirname(directory);\n  }\n};\nmodule.exports.sync = (name, options = {}) => {\n  let directory = path.resolve(options.cwd || '');\n  const {\n    root\n  } = path.parse(directory);\n  const paths = [].concat(name);\n  const runMatcher = locateOptions => {\n    if (typeof name !== 'function') {\n      return locatePath.sync(paths, locateOptions);\n    }\n    const foundPath = name(locateOptions.cwd);\n    if (typeof foundPath === 'string') {\n      return locatePath.sync([foundPath], locateOptions);\n    }\n    return foundPath;\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const foundPath = runMatcher({\n      ...options,\n      cwd: directory\n    });\n    if (foundPath === stop) {\n      return;\n    }\n    if (foundPath) {\n      return path.resolve(directory, foundPath);\n    }\n    if (directory === root) {\n      return;\n    }\n    directory = path.dirname(directory);\n  }\n};\nmodule.exports.exists = pathExists;\nmodule.exports.sync.exists = pathExists.sync;\nmodule.exports.stop = stop;","map":{"version":3,"names":["path","require","locatePath","pathExists","stop","Symbol","module","exports","name","options","directory","resolve","cwd","root","parse","paths","concat","runMatcher","locateOptions","foundPath","dirname","sync","exists"],"sources":["C:/Users/ryana/Desktop/CPSC 362 PROJECT/client/node_modules/find-up/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst locatePath = require('locate-path');\nconst pathExists = require('path-exists');\n\nconst stop = Symbol('findUp.stop');\n\nmodule.exports = async (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = async locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = await name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst foundPath = await runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.sync = (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath.sync(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath.sync([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tconst foundPath = runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.exists = pathExists;\n\nmodule.exports.sync.exists = pathExists.sync;\n\nmodule.exports.stop = stop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}